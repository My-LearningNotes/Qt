QThread简介
===========

``QThread``\ 是Qt中的线程管理类，它自身并不是代表一个新的线程，而是Qt提供的一个用于管理控制子线程的接口，每个\ ``QThread``\ 实例就代表对一个子线程的控制接口。

-  ``QThread``\ 提供一个公共槽接口\ ``start()``\ ，用于启动子线程；

-  ``QThread::run()``\ 是子线程的入口，\ ``run()``\ 里面的语句都是在一个新的子线程中执行；

   ``QThread::run()``\ 的默认实现是调用\ ``QThread::exec()``\ ，表示在\ ``QThread``\ 中启动一个事件循环；

-  ``QThread``\ 是用来管理线程的，\ **它所依附的线程**\ 和\ **它管理的线程**\ 不是同一个东西

   -  **QThread所依附的线程**\ ，指创建\ ``QThread``\ 对象的的线程，通常成为\ **主线程**

   -  **QThread所管理的线程**\ ，指\ ``run()``\ 启动的线程，通常称为\ **子线程**

   -  通常，一个\ ``QThread``\ 中，\ ``run()``\ 函数中的代码是在子线程中执行的，而其他部分还是在创建该\ ``QThread``\ 的线程中执行的


在Qt中，通过\ ``QThread``\ 实现多线程，有两种方式:

-  **方法1:**
   子类化\ ``QThread``\ ，重写\ ``QThread::run()``\ 方法，在其中实现要执行的代码，用\ ``QThread::start()``\ 方法启动子线程

-  **方法2:**
   子类化\ ``QObject``\ ，在其中定义信号，槽和其他要实现的代码

   定义一个\ ``QThread``\ 的实例，使用\ ``QObject::moveToThread()``\ 方法将定义的\ ``QObject``\ 实例move到子线程中，用\ ``QThread::start()``\ 方法启动子线程

